# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# Define a function to require scripts with node
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Configure permissions - only enable the ones needed
setup_permissions([
  'Microphone',
  'PhotoLibrary',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'MatrixAI' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Force-enable build-for-debugging for all pods, which ensures dSYM files are generated
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        
        # Ensure that we're generating dSYMs for all pods, including Hermes
        if config.name == 'Release'
          config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
          config.build_settings['COPY_PHASE_STRIP'] = 'NO'
          config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'NO'
        end
        
        # Fix for RNShare compilation errors with new architecture
        if target.name == 'RNShare'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
        end
      end
    end
    
    # Additional settings for hermes.framework specifically
    installer.pods_project.targets.each do |target|
      if target.name == 'hermes'
        target.build_configurations.each do |config|
          config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
          config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'NO'
          config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
        end
      end
    end
  end
end
